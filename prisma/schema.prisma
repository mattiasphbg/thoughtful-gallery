// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}


model userIdentity {
  id       Int      @id @default(autoincrement())
  name     String
  email    String
  jobTitle String
  imageUrl    String?  @default("https://res.cloudinary.com/dxhfq1g84/image/upload/v1698164979/thoughtful-gallery/noImage_byy3zm.jpg")
  globalAdmin Boolean? @default(false)
  clerkId String? 
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @updatedAt
  posts    Post[]
  profile  Profile?
  role Role
  artworks Artwork[]
}

enum Role {
  ADMIN
  USER
  EDITOR
}


model feedback {
  id Int @id @default(autoincrement())
  name String
  email String
  message String @db.Text
  createdAt DateTime @default(now()) @db.DateTime(3)

}


model Exhibit {
  id Int @id @default(autoincrement())
  title String
  subTitle String?
  Description String 
  image String?
  date DateTime?
  location String
  categories Category[]
  period String?
  Events String?
  Historical String @db.VarChar(500)
}



model Profile {
  id       Int    @id @default(autoincrement())
  biograpy String // Intentional typo!
  userId   Int    @unique
  user     userIdentity   @relation(fields: [userId], references: [id])
}

model Post {
  id         Int        @id @default(autoincrement())
  slug       String     @unique // A URL-friendly version of the title
  title      String
  description String    @db.VarChar(100)
  imageUrl      String
  content    String     @db.VarChar(1500)
  published  Boolean    @default(false)
  author     userIdentity?       @relation(fields: [authorId], references: [id])
  authorId   Int
  createdAt  DateTime   @default(now())
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(100)
  Exhibits Exhibit[]

  @@unique([name])
}

model Country {
  id          Int          @id @default(autoincrement())
  name        String
  population  Int
  capital     String
  currency    String
  language    String
  flagImage   String
  description String
  
  histories   History[]
  items       Item[]
  
}
model History {
  id          Int     @id @default(autoincrement())
  eventDate   DateTime
  eventDescription String
  timeline    String // or DateTime, based on your chosen representation
  
  country     Country @relation(fields: [countryId], references: [id])
  countryId   Int
}

model Artwork {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  
  @@map(name: "artworks_categories")
  
  artist      userIdentity?   @relation(fields: [artistId], references: [id])
  artistId    Int?
  
}

model Artifact {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  imageUrl    String

}



model Item {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  image       String

  countries   Country[]
}
